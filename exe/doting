#!/usr/bin/env ruby

require 'json'
require 'fileutils'

require 'doting'

BASEPATH = File.expand_path('~/.dotfiles')
profile = File.join(BASEPATH, 'profiles', "#{ARGV[1]}.json")
begin
  data = JSON.parse(File.open(profile, 'r').read)
rescue JSON::ParserError => e
  puts "CONFIGURATION FILE ERROR: #{e.to_s}"
  exit 1
end

unless data.key?('symlinks')
  puts 'CONFIGURATION FILE ERROR: [symlinks] fields are mandatory'
  exit 1
end

case ARGV[0]
when 'install'
  data['symlinks'].each do |k, v|
    src = File.join(BASEPATH, k)
    target = File.join(ENV['HOME'], v)
    location = File.dirname(target)

    # Create parent directories if they don't already exist
    FileUtils.mkdir_p location unless Dir.exist? location
    # Remove existing target
    if File.exist? target
      File.unlink target if File.file? target
      Dir.unlink target if File.directory? target
    end
    # If a file, templatize the file
    if File.file?(src)
      output = Doting::Contextualizer.contextualize(File.open(src).read,
                                                    data['context'])
      File.open(target, 'w') do |f|
        f << output
      end
    end
    FileUtils.ln_s(src, target) if File.directory?(src)
  end
when 'uninstall'
  data['symlinks'].each do |k, v|
    target = File.join(ENV['HOME'], v)
    File.unlink File.join(target)
  end
end
